<script>
	google.charts.load('current', {'packages':['timeline']});
	google.charts.setOnLoadCallback(drawChart);
	
  const timelineElement = document.getElementById('projects_timeline_chart_div');
	const valuesToArray = obj => Object.keys(obj).map(key => obj[key])
	const tasks_formatted = new Array()
	
	const tasks = JSON.parse(timelineElement.dataset.tasks);
	for (var i = 0; i < tasks.length; i++) {
	    tasks[i].Start = new Date(tasks[i].Start)
	    tasks[i].End = new Date(tasks[i].End)
	    let task_formatted = valuesToArray(tasks[i])
	    tasks_formatted.push(task_formatted)
	}
  console.log("these are the tasks formatted");
  console.log(tasks_formatted);



	function drawChart() {
	
	  var chart = new google.visualization.Timeline(timelineElement);
	  var dataTable = new google.visualization.DataTable();
	  dataTable.addColumn({ type: 'string', id: 'Position' });
	  dataTable.addColumn({ type: 'string', id: 'Name' });
	  dataTable.addColumn({ type: 'string', role: 'tooltip' });
	  dataTable.addColumn({ type: 'date', id: 'Start' });
	  dataTable.addColumn({ type: 'date', id: 'End' });
	  dataTable.addRows(tasks_formatted);
	  
	  var minimumRows = 5
    if (dataTable.getNumberOfRows() < minimumRows) {
      var height = minimumRows * 41 + 50;
    } else {
		  var height = dataTable.getNumberOfRows() * 41 + 50; 
    }

	  var options = {
      height: height,
	    timeline: { 
	    	groupByRowLabel: true,
	    },
	    colors: <%= raw @colors %>,
	  };

	  chart.draw(dataTable, options);
	}
</script>